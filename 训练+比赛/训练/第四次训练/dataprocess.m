% dismat为距离矩阵
clear, clc;
dots=[0,0;1,0;2,0;3,0;4,0;5,0;-1,0;-2,0;-3,0;-4,0;-5,0;0,-1;0,-2;0,-3;0,-4;0,1;0,2;0,3;0,4;1,-1;1,-2;1,-3;1,-4;2,-1;2,-2;2,-3;2,-4;3,-1;3,-2;3,-3;3,-4;4,-1;4,-2;4,-3;4,-4;5,-1;5,-2;5,-3;5,-4;1,1;1,2;1,3;1,4;2,1;2,2;2,3;2,4;3,1;3,2;3,3;3,4;4,1;4,2;4,3;4,4;5,1;5,2;5,3;5,4;-1,-1;-2,-1;-3,-1;-4,-1;-5,-1;-1,-2;-2,-2;-3,-2;-4,-2;-5,-2;-1,-3;-2,-3;-3,-3;-4,-3;-5,-3;-1,-4;-2,-4;-3,-4;-4,-4;-5,-4;-1,1;-2,1;-3,1;-4,1;-5,1;-1,2;-3,2;-4,2;-5,2;-1,3;-2,3;-3,3;-4,3;-5,3;-1,4;-2,4;-3,4;-4,4;-5,4;-1,5;-2,5;-3,5;-4,5;-5,5];
a = ones(103, 103);
a(2,40)=0;
a(4,48)=0;
a(5,52)=0;
a(7,80)=0;
a(7,60)=0;
a(9,82)=0;
a(9,62)=0;
a(10,83)=0;
a(10,63)=0;
a(12,20)=0;
a(14,22)=0;
a(17,41)=0;
a(18,42)=0;
a(20,24)=0;
a(20,12)=0;
a(22,14)=0;
a(22,26)=0;
a(40,2)=0;
a(41,17)=0;
a(41,45)=0;
a(42,46)=0;
a(42,18)=0;
a(45,41)=0;
a(45,49)=0;
a(46,42)=0;
a(46,50)=0;
a(49,45)=0;
a(50,46)=0;
a(53,49)=0;
a(53,57)=0;
a(54,50)=0;
a(54,58)=0;
a(57,53)=0;
a(58,54)=0;
a(60,7)=0;
a(60,65)=0;
a(65,60)=0;
a(65,70)=0;
a(70,65)=0;
a(70,75)=0;
a(75,70)=0;
a(62,67)=0;
a(67,62)=0;
a(67,72)=0;
a(72,67)=0;
a(72,77)=0;
a(77,72)=0;
a(63,10)=0;
a(63,68)=0;
a(68,63)=0;
a(68,73)=0;
a(73,68)=0;
a(73,78)=0;
a(78,73)=0;
a(80,7)=0;
a(7,80)=0;
a(82,9)=0;
a(83,10)=0;
a(85,17)=0;
a(85,86)=0;
a(86,85)=0;
a(86,87)=0;
a(87,86)=0;
a(88,87)=0;
a(80,16)=0;
a(90,81)=0;
a(94,19)=0;
a(95,100)=0;
a(96,101)=0;
a(97,102)=0;
a(100,95)=0;
a(101,96)=0;
a(102,97)=0;
a(62,9)=0;
a = a+a';
a = (a == 2);
% 利用bfs寻找最短路
nxt = [0,1;1,0;0,-1;-1,0];
for i = 1:size(dots,1)
    vis = zeros(1, size(dots, 1));
    queuex = [dots(i,1)];
    queuey = [dots(i,2)];
    L = [0];
    vis(i) = 1;
    while ~isempty(queuex)
        
        x1 = queuex(1);
        y1 = queuey(1);
        old_ord = find(dots(:,1)==x1 & dots(:,2)==y1);
        L1 = L(1);
        queuex(1) = [];
        queuey(1) = [];
        L(1) = [];
        for k = 1:4
            x2 = x1+nxt(k,1);
            y2 = y1+nxt(k,2);
            ord = find(dots(:,1)==x2 & dots(:,2)==y2);
            if a(old_ord, ord) == 0
                continue;
            end
            if (x2<0 && (y2>5 || y2<-4)) || (x2==-2 && y2==2)
                continue;
            end
            if x2 < -5 || x2 > 5 || (x2 >= 0 && (y2 > 4 || y2 < -4)) || (x2 < 0 && (y2 < -4 || y2 > 5))
                continue;
            end
            if vis(ord) == 1
                continue;
            end
            vis(ord) = 1;
            queuex(end+1)=x2;
            queuey(end+1)=y2;
            L(end+1) = L1+1;
            distmat(i, ord) = L1 + 1;
        end
    end
end
save('a.mat','a'); % a为0-1矩阵，表示两个点之间是否直接相连
save('dots.mat', 'dots');
save('distmat.mat','distmat');